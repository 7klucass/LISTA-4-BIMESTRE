use db_atividade_view;

-- 1
-- CREATE OR REPLACE VIEW VW_ALUNOS_DISCIPLINA AS

SELECT aluno.nome nome_aluno, disciplina.nome nome_disciplina, curso.nome nome_curso
FROM aluno 
INNER JOIN matricula ON matricula.id_aluno = aluno.id_aluno
INNER JOIN disciplina ON disciplina.id_disciplina = matricula.id_disciplina
INNER JOIN curso ON curso.id_curso = disciplina.id_curso;

-- 2 

-- CREATE OR REPLACE VIEW ALUNOS_POR_DISCIPLINA AS 
SELECT disciplina.nome nome_disciplina, COUNT(matricula.id_aluno) AS total_aluno
FROM disciplina 
INNER JOIN matricula ON disciplina.id_disciplina = matricula.id_disciplina
GROUP BY disciplina.nome;


-- 3 
-- CREATE OR REPLACE VIEW ALUNOS_STATUS_DISCIPLINA AS

SELECT aluno.nome nome_aluno, disciplina.nome nome_disciplina, matricula.status status_matricula
FROM matricula
INNER JOIN ALUNO ON ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
INNER JOIN DISCIPLINA ON DISCIPLINA.ID_DISCIPLINA = MATRICULA.ID_DISCIPLINA
INNER JOIN CURSO ON CURSO.ID_CURSO = DISCIPLINA.ID_CURSO;

-- 4

-- CREATE OR REPLACE VIEW PROFESSORES_DISCIPLINAS AS 
SELECT professor.nome nome_professor, disciplina.nome nome_disciplina, turma.horario
FROM turma 
INNER JOIN professor ON professor.id_professor = turma.id_turma
INNER JOIN disciplina ON disciplina.id_disciplina = turma.id_turma;

-- 5 
-- CREATE OR REPLACE VIEW NOME_DATA AS
SELECT aluno.nome nome_aluno, aluno.data_nascimento data_aluno
FROM aluno 
WHERE TIMESTAMPDIFF(YEAR, data_nascimento, CURDATE()) >= 20; -- este where aprendi com chat gpt 

-- 6 
-- 	CREATE OR REPLACE VIEW DISCIPLINA_CARGA
SELECT curso.nome curso_nome, COUNT(disciplina.id_disciplina) total_disciplina, curso.carga_horaria carga_horaria
FROM curso 
INNER JOIN disciplina on disciplina.id_curso = curso.id_curso
GROUP BY curso.nome, curso.carga_horaria;

-- 7 
-- CREATE OR REPLACE VIEW PROFESSORES_ESPECIALIDADE AS
SELECT nome, especialidade
FROM professor;

-- 8 

-- CREATE OR REPLACE VIEW ALUNOS_MAISDEUM_DISCIPLINA AS
SELECT	aluno.nome
FROM matricula
INNER JOIN aluno ON aluno.id_aluno = matricula.id_aluno
GROUP BY aluno.nome
HAVING	COUNT(MATRICULA.ID_DISCIPLINA) > 1;

-- 9
-- CREATE VIEW CONCLUIDOS AS
SELECT	ALUNO.NOME,
		COUNT(MATRICULA.STATUS)
FROM MATRICULA
INNER JOIN ALUNO ON
		ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
WHERE	MATRICULA.STATUS LIKE ("C%")
GROUP BY	ALUNO.NOME
;
-- 10
-- CREATE VIEW TURMAS_SEMESTRE AS
SELECT	ID_TURMA
FROM TURMA
WHERE SEMESTRE LIKE '2024.1'
;
-- 11
-- CREATE VIEW TRANCADAS AS
SELECT	ALUNO.NOME
FROM MATRICULA
INNER JOIN ALUNO ON
		ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
WHERE	MATRICULA.STATUS LIKE ("T%")
GROUP BY	ALUNO.NOME
;
-- 12
-- CREATE VIEW DISC_SEM_MATRICULAS AS
SELECT	DISCIPLINA.NOME
FROM DISCIPLINA
LEFT JOIN MATRICULA ON
		MATRICULA.ID_DISCIPLINA = DISCIPLINA.ID_DISCIPLINA
WHERE	MATRICULA.ID_DISCIPLINA IS NULL
;
-- 13
-- CREATE VIEW CONTROLE_STATUS_MATRICULA AS
SELECT	STATUS,
		COUNT(ID_ALUNO)	AS QNT_ALUNO
FROM MATRICULA
GROUP BY	STATUS
;
-- 14
-- CREATE VIEW CONTROLE_PROF AS
SELECT	ESPECIALIDADE,
		COUNT(ID_PROFESSOR)	AS	QNT_PROF
FROM PROFESSOR
GROUP BY	ESPECIALIDADE
;
-- 15
-- CREATE VIEW ALUNO_IDADE AS
SELECT	NOME,
        FORMAT((DATEDIFF(CURDATE(), DATA_NASCIMENTO) /365), 0)	AS IDADE
FROM ALUNO
;
-- 16
-- CREATE VIEW ULTIMA_MATRICULA_ALUNO AS
SELECT	ALUNO.NOME,
		MAX(MATRICULA.DATA_MATRICULA)	AS ULT_MATRICULA
FROM MATRICULA
INNER JOIN ALUNO ON
		ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
GROUP BY	ALUNO.NOME
;
-- 17
-- CREATE VIEW DISCIPLINA_CURSO AS
SELECT	DISCIPLINA.NOME AS DISC,
		CURSO.NOME	AS CURSO
FROM	DISCIPLINA
INNER JOIN CURSO ON
		CURSO.ID_CURSO = DISCIPLINA.ID_CURSO
WHERE	CURSO.NOME LIKE 'Engenharia de Software'
;
-- 18
-- CREATE  VIEW PROFESSORES_SEM_AULA AS
SELECT	PROFESSOR.NOME
FROM TURMA
LEFT JOIN PROFESSOR ON
		PROFESSOR.ID_PROFESSOR = TURMA.ID_PROFESSOR
WHERE	PROFESSOR.ID_PROFESSOR IS NULL
;
-- 19
-- CREATE VIEW ALUNO_FILTRADA AS
SELECT	NOME,
		CPF,
        EMAIL
FROM ALUNO;
;
-- 20
-- CREATE VIEW QNT_DISC_ AS
SELECT	professor.nome nome_professor, COUNT(ID_DISCIPLINA)	AS	QNT_DISC
FROM professor
INNER JOIN turma ON turma.id_professor = professor.id_professor
GROUP BY	professor.nome
;
